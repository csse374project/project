digraph UML {

	node [
		shape = "record"
	]

	ISprite [
		label = "{\<\<Composite Component\>\>\n\<\<Interface\>\>\nproblem/sprites/ISprite||+ void move(java.awt.Dimension)\l+ Shape getShape()\l+ Iterator iterator()\l|}"
		style=filled
		fillcolor=yellow

	]

	AbstractSprite [
		label = "{\<\<Leaf\>\>\nproblem/sprites/AbstractSprite|# dx: double\l# dy: double\l# shape: java.awt.Shape\l|# Rectangle2D computeNewBoundsAfterMoving(java.awt.Dimension)\l+ Shape getShape()\l+ void move(java.awt.Dimension)\l+ Iterator iterator()\l|}"
		style=filled
		fillcolor=yellow

	]

	SnowmanSprite [
		label = "{\<\<Composite\>\>\nproblem/sprites/SnowmanSprite||+ void move(java.awt.Dimension)\l|}"
		style=filled
		fillcolor=yellow

	]

	RectangleSprite [
		label = "{\<\<Leaf\>\>\nproblem/sprites/RectangleSprite||+ void move(java.awt.Dimension)\l|}"
		style=filled
		fillcolor=yellow

	]

	SnowmanWithBoxSprite [
		label = "{\<\<Composite\>\>\nproblem/sprites/SnowmanWithBoxSprite||+ void move(java.awt.Dimension)\l|}"
		style=filled
		fillcolor=yellow

	]

	MainWindow [
		label = "{problem/graphics/MainWindow|- frame: javax.swing.JFrame\l- actionPanel: javax.swing.JPanel\l- animationPanel: problem.graphics.AnimationPanel\l- moveButton: javax.swing.JButton\l- createButton: javax.swing.JButton\l- resetButton: javax.swing.JButton\l|- void createWidgets(java.lang.String, long)\l- void assignActions()\l+ void show()\l  AnimationPanel access$0(problem.graphics.MainWindow)\l  JButton access$1(problem.graphics.MainWindow)\l  JButton access$2(problem.graphics.MainWindow)\l|}"
		
	]

	CircleSprite [
		label = "{\<\<Leaf\>\>\nproblem/sprites/CircleSprite||+ void move(java.awt.Dimension)\l|}"
		style=filled
		fillcolor=yellow

	]

	SpriteFactory [
		label = "{problem/sprites/SpriteFactory|+ DX: double\l+ DY: double\l+ WIDTH: double\l+ HEIGHT: double\l- random: java.util.Random\l- sprites: java.util.List[java/lang/Class, problem/sprites/ISprite]\l|+ Point2D computeRandomLocation(java.awt.Dimension)\l+ ISprite createRandomSprite(java.awt.Dimension)\l|}"
		
	]

	AnimationPanel [
		label = "{problem/graphics/AnimationPanel|- serialVersionUID: long\l- sprites: java.util.List[problem/sprites/ISprite]\l- animating: boolean\l- sleepTime: long\l|+ void add(problem.sprites.ISprite)\l+ Dimension getSize()\l+ void animate()\l+ void reset()\l# void paintComponent(java.awt.Graphics)\l- void drawSprite(problem.sprites.ISprite, java.awt.Graphics2D)\l  boolean access$0(problem.graphics.AnimationPanel)\l  List access$1(problem.graphics.AnimationPanel)\l  long access$2(problem.graphics.AnimationPanel)\l|}"
>>>>>>> refs/remotes/origin/Milestone7GUI
		
	]

	AbstractCompositeSprite [
		label = "{\<\<Composite\>\>\nproblem/sprites/AbstractCompositeSprite|# dx: double\l# dy: double\l# shape: java.awt.Shape\l# children: java.util.List[problem/sprites/ISprite]\l|# Rectangle2D computeNewBoundsAfterMoving(java.awt.Dimension)\l+ Shape getShape()\l+ void move(java.awt.Dimension)\l+ Iterator iterator()\l|}"
		style=filled
		fillcolor=yellow

	]

	edge [
		arrowhead = "empty"
	]

<<<<<<< HEAD
	AdapterDecorator -> IClassDecorator

	CompositeDecorator -> IClassDecorator

	TopLevelDecorator -> IClassDecorator

	AdapteeDecorator -> IClassDecorator

	InterfaceDecorator -> IClassDecorator

	AdaptionTargetDecorator -> IClassDecorator

	CompositeComponentDecorator -> IClassDecorator

	DecoratorComponentDecorator -> IClassDecorator

	CompositeLeafDecorator -> IClassDecorator

	DecoratorDecorator -> IClassDecorator

	SingletonDecorator -> IClassDecorator
=======
	SnowmanSprite -> AbstractCompositeSprite

	RectangleSprite -> AbstractSprite

	SnowmanWithBoxSprite -> AbstractCompositeSprite

	CircleSprite -> AbstractSprite
>>>>>>> refs/remotes/origin/Milestone7GUI

	edge [
		style = "dashed"
	]

<<<<<<< HEAD
	UMLField -> IField

	IClassDecorator -> IClass

	UMLClass -> IClass

	UMLMethod -> IMethod
=======
	AbstractSprite -> ISprite

	AbstractCompositeSprite -> ISprite
>>>>>>> refs/remotes/origin/Milestone7GUI

	edge [
		arrowhead = "normal" style = "solid"
	]

<<<<<<< HEAD
	UMLParser -> Classes

	SingletonFieldVisitor -> IClassDecorator

	IClassDecorator -> IClass

	MethodCalls -> SequenceMethodCall

	SingletonMethodVisitor -> IClassDecorator

	ClassDeclarationVisitor -> IClassDecorator

	DecoratorDetector -> IClass

	Classes -> IClass

	UMLClass -> IField

	UMLClass -> IMethod

	AdapterMethodVisitor -> MutableBoolean

	AdapterDetector -> IClass

	AdapterFieldVisitor -> MutableBoolean

	SequenceParser -> MethodCalls

	MethodCodeVisitor -> IClass

	AdapterClassVisitor -> IClassDecorator

	SingleMethodVisitor -> SequenceMethodCall

	SequenceMethodCodeVisitor -> SequenceMethodCall

	ClassFieldVisitor -> IClass

	ClassFieldVisitor -> IField

	ClassMethodVisitor -> IClass

	MethodDeclarationVisitor -> IClassDecorator

	CompositeDetector -> IClass
=======
	MainWindow -> AnimationPanel

	SpriteFactory -> ISprite

	AnimationPanel -> ISprite

	AbstractCompositeSprite -> ISprite
>>>>>>> refs/remotes/origin/Milestone7GUI

	edge [
		arrowhead = "normal" style = "dashed"
	]

<<<<<<< HEAD
	UMLParser -> DecoratorDetector

	UMLParser -> AdapterDetector

	UMLParser -> CompositeDetector

	UMLParser -> UMLClass

	UMLParser -> TopLevelDecorator

	UMLParser -> IClassDecorator

	AdapterDecorator -> IClass

	AdapterDecorator -> UMLParser

	SingletonFieldVisitor -> UMLParser

	SingletonFieldVisitor -> SingletonMethodVisitor

	CompositeDecorator -> IClass

	IClassDecorator -> IField

	IClassDecorator -> IMethod

	SingletonMethodVisitor -> UMLParser

	SingletonMethodVisitor -> SingletonDecorator

	TopLevelDecorator -> IClass

	TopLevelDecorator -> IClassDecorator

	IClass -> IField

	IClass -> IMethod

	ClassDeclarationVisitor -> InterfaceDecorator

	AdapteeDecorator -> IClass

	DecoratorDetector -> Classes

	DecoratorDetector -> IField

	DecoratorDetector -> DecoratorDecorator

	DecoratorDetector -> IClassDecorator

	DecoratorDetector -> DecoratorComponentDecorator

	InterfaceDecorator -> IClass

	AdaptionTargetDecorator -> IClass

	CompositeComponentDecorator -> IClass

	UMLClass -> UMLParser

	AdapterDetector -> Classes

	AdapterDetector -> AdapterDecorator

	AdapterDetector -> AdapteeDecorator

	AdapterDetector -> IClassDecorator

	AdapterDetector -> AdaptionTargetDecorator

	AdapterFieldVisitor -> AdapterMethodVisitor

	DecoratorComponentDecorator -> IClass

	SequenceParser -> SingleMethodVisitor

	AdapterClassVisitor -> MutableBoolean

	AdapterClassVisitor -> AdapterFieldVisitor

	AdapterClassVisitor -> AdapterDecorator

	SingleMethodVisitor -> SequenceMethodCodeVisitor

	SingleMethodVisitor -> MethodCalls

	SequenceMethodCodeVisitor -> SingleMethodVisitor

	ClassFieldVisitor -> UMLField

	ClassMethodVisitor -> UMLMethod

	ClassMethodVisitor -> IMethod

	CompositeLeafDecorator -> IClass

	MethodDeclarationVisitor -> MethodCodeVisitor

	DecoratorDecorator -> IClass

	SingletonDecorator -> IClass

	CompositeDetector -> Classes

	CompositeDetector -> IField

	CompositeDetector -> CompositeDecorator

	CompositeDetector -> IClassDecorator

	CompositeDetector -> CompositeLeafDecorator

	CompositeDetector -> CompositeComponentDecorator
=======
	AbstractSprite -> ISprite

	SnowmanSprite -> CircleSprite

	SnowmanSprite -> ISprite

	SnowmanWithBoxSprite -> RectangleSprite

	SnowmanWithBoxSprite -> SnowmanSprite

	SnowmanWithBoxSprite -> ISprite

	AnimationPanel -> AbstractCompositeSprite
>>>>>>> refs/remotes/origin/Milestone7GUI

}