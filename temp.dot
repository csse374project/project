digraph UML {

	node [
		shape = "record"
	]

	CompositeWithArray [
		label = "{testingData/compositePattern/CompositeWithArray|+ array: testingData.compositePattern.CompositeComponentWithArray[]\l||}"
		
	]

	CompositeLeafWithArray [
		label = "{testingData/compositePattern/CompositeLeafWithArray|||}"
		
	]

	CompositeComponentWithArray [
		label = "{testingData/compositePattern/CompositeComponentWithArray||+ void doNothing()\l|}"
		
	]

	edge [
		arrowhead = "empty"
	]

	CompositeWithArray -> CompositeComponentWithArray

	CompositeLeafWithArray -> CompositeComponentWithArray

	edge [
		style = "dashed"
	]

	edge [
		arrowhead = "normal" style = "solid"
	]

	edge [
		arrowhead = "normal" style = "dashed"
	]

}oid deleteShortcut(java.awt.MenuShortcut)\l  void doMenuEvent(long, int)\l- boolean isItemEnabled()\l  boolean handleShortcut(java.awt.event.KeyEvent)\l  MenuItem getShortcutMenuItem(java.awt.MenuShortcut)\l# void enableEvents(long)\l# void disableEvents(long)\l+ void setActionCommand(java.lang.String)\l+ String getActionCommand()\l  String getActionCommandImpl()\l+ void addActionListener(java.awt.event.ActionListener)\l+ void removeActionListener(java.awt.event.ActionListener)\l+ ActionListener[] getActionListeners()\l+ EventListener[] getListeners(java.lang.Class)\l# void processEvent(java.awt.AWTEvent)\l  boolean eventEnabled(java.awt.AWTEvent)\l# void processActionEvent(java.awt.event.ActionEvent)\l+ String paramString()\l- void writeObject(java.io.ObjectOutputStream)\l- void readObject(java.io.ObjectInputStream)\l- void initIDs()\l+ AccessibleContext getAccessibleContext()\l  MenuShortcut access$000(java.awt.MenuItem)\l  boolean access$100(java.awt.MenuItem)\l|}"
		style=filled
		fillcolor=yellow

	]

	MenuComponent [
		label = "{\<\<Composite Component\>\>\njava/awt/MenuComponent|  peer: java.awt.peer.MenuComponentPeer\l  parent: java.awt.MenuContainer\l  appContext: sun.awt.AppContext\l  font: java.awt.Font\l- name: java.lang.String\l- nameExplicitlySet: boolean\l  newEventsOnly: boolean\l- acc: java.security.AccessControlContext\l  actionListenerK: java.lang.String\l  itemListenerK: java.lang.String\l- serialVersionUID: long\l  accessibleContext: javax.accessibility.AccessibleContext\l|  AccessControlContext getAccessControlContext()\l  String constructComponentName()\l+ String getName()\l+ void setName(java.lang.String)\l+ MenuContainer getParent()\l  MenuContainer getParent_NoClientCode()\l+ MenuComponentPeer getPeer()\l+ Font getFont()\l  Font getFont_NoClientCode()\l+ void setFont(java.awt.Font)\l+ void removeNotify()\l+ boolean postEvent(java.awt.Event)\l+ void dispatchEvent(java.awt.AWTEvent)\l  void dispatchEventImpl(java.awt.AWTEvent)\l  boolean eventEnabled(java.awt.AWTEvent)\l# void processEvent(java.awt.AWTEvent)\l# String paramString()\l+ String toString()\l# Object getTreeLock()\l- void readObject(java.io.ObjectInputStream)\l- void initIDs()\l+ AccessibleContext getAccessibleContext()\l  int getAccessibleIndexInParent()\l  int getAccessibleChildIndex(java.awt.MenuComponent)\l  AccessibleStateSet getAccessibleStateSet()\l|}"
		style=filled
		fillcolor=yellow

	]

	Menu [
		label = "{\<\<Composite\>\>\njava/awt/Menu|  items: java.util.Vector[java/awt/MenuComponent]\l  tearOff: boolean\l  isHelpMenu: boolean\l- base: java.lang.String\l- nameCounter: int\l- serialVersionUID: long\l- menuSerializedDataVersion: int\l|  String constructComponentName()\l+ void addNotify()\l+ void removeNotify()\l+ boolean isTearOff()\l+ int getItemCount()\l+ int countItems()\l  int countItemsImpl()\l+ MenuItem getItem(int)\l  MenuItem getItemImpl(int)\l+ MenuItem add(java.awt.MenuItem)\l+ void add(java.lang.String)\l+ void insert(java.awt.MenuItem, int)\l+ void insert(java.lang.String, int)\l+ void addSeparator()\l+ void insertSeparator(int)\l+ void remove(int)\l+ void remove(java.awt.MenuComponent)\l+ void removeAll()\l  boolean handleShortcut(java.awt.event.KeyEvent)\l  MenuItem getShortcutMenuItem(java.awt.MenuShortcut)\l  Enumeration shortcuts()\l  void deleteShortcut(java.awt.MenuShortcut)\l- void writeObject(java.io.ObjectOutputStream)\l- void readObject(java.io.ObjectInputStream)\l+ String paramString()\l- void initIDs()\l+ AccessibleContext getAccessibleContext()\l  int getAccessibleChildIndex(java.awt.MenuComponent)\l|}"
		style=filled
		fillcolor=yellow

	]

	MenuBar [
		label = "{\<\<Composite\>\>\njava/awt/MenuBar|  menus: java.util.Vector[java/awt/Menu]\l  helpMenu: java.awt.Menu\l- base: java.lang.String\l- nameCounter: int\l- serialVersionUID: long\l- menuBarSerializedDataVersion: int\l|  String constructComponentName()\l+ void addNotify()\l+ void removeNotify()\l+ Menu getHelpMenu()\l+ void setHelpMenu(java.awt.Menu)\l+ Menu add(java.awt.Menu)\l+ void remove(int)\l+ void remove(java.awt.MenuComponent)\l+ int getMenuCount()\l+ int countMenus()\l  int getMenuCountImpl()\l+ Menu getMenu(int)\l  Menu getMenuImpl(int)\l+ Enumeration shortcuts()\l+ MenuItem getShortcutMenuItem(java.awt.MenuShortcut)\l  boolean handleShortcut(java.awt.event.KeyEvent)\l+ void deleteShortcut(java.awt.MenuShortcut)\l- void writeObject(java.io.ObjectOutputStream)\l- void readObject(java.io.ObjectInputStream)\l- void initIDs()\l+ AccessibleContext getAccessibleContext()\l  int getAccessibleChildIndex(java.awt.MenuComponent)\l|}"
		style=filled
		fillcolor=yellow

	]

	edge [
		arrowhead = "empty"
	]

	MenuItem -> MenuComponent

	Menu -> MenuItem

	MenuBar -> MenuComponent

	edge [
		style = "dashed"
	]

	edge [
		arrowhead = "normal" style = "solid"
	]

	Menu -> MenuComponent

	MenuBar -> Menu

	edge [
		arrowhead = "normal" style = "dashed"
	]

	MenuItem -> Menu

	Menu -> MenuItem

	MenuBar -> MenuComponent

	MenuBar -> MenuItem

}ParentOf(java.awt.Component)\l  void clearMostRecentFocusOwnerOnHide()\l  void clearCurrentFocusCycleRootOnHide()\l  Container getTraversalRoot()\l+ void setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)\l+ FocusTraversalPolicy getFocusTraversalPolicy()\l+ boolean isFocusTraversalPolicySet()\l+ void setFocusCycleRoot(boolean)\l+ boolean isFocusCycleRoot()\l+ void setFocusTraversalPolicyProvider(boolean)\l+ boolean isFocusTraversalPolicyProvider()\l+ void transferFocusDownCycle()\l  void preProcessKeyEvent(java.awt.event.KeyEvent)\l  void postProcessKeyEvent(java.awt.event.KeyEvent)\l  boolean postsOldMouseEvents()\l+ void applyComponentOrientation(java.awt.ComponentOrientation)\l+ void addPropertyChangeListener(java.beans.PropertyChangeListener)\l+ void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\l- void writeObject(java.io.ObjectOutputStream)\l- void readObject(java.io.ObjectInputStream)\l  Accessible getAccessibleAt(java.awt.Point)\l  int getAccessibleChildrenCount()\l  Accessible getAccessibleChild(int)\l  void increaseComponentCount(java.awt.Component)\l  void decreaseComponentCount(java.awt.Component)\l- int getTopmostComponentIndex()\l- int getBottommostComponentIndex()\l  Region getOpaqueShape()\l  void recursiveSubtractAndApplyShape(sun.java2d.pipe.Region)\l  void recursiveSubtractAndApplyShape(sun.java2d.pipe.Region, int)\l  void recursiveSubtractAndApplyShape(sun.java2d.pipe.Region, int, int)\l  void recursiveApplyCurrentShape()\l  void recursiveApplyCurrentShape(int)\l  void recursiveApplyCurrentShape(int, int)\l- void recursiveShowHeavyweightChildren()\l- void recursiveHideHeavyweightChildren()\l- void recursiveRelocateHeavyweightChildren(java.awt.Point)\l  boolean isRecursivelyVisibleUpToHeavyweightContainer()\l  void mixOnShowing()\l  void mixOnHiding(boolean)\l  void mixOnReshaping()\l  void mixOnZOrderChanging(int, int)\l  void mixOnValidating()\l|}"
		style=filled
		fillcolor=yellow

	]

	Container -> Component [label = "\<\<decorates\>\>"]

	Component [
		label = "{\<\<Composite Component\>\>\n\<\<Decorator Component\>\>\njava/awt/Component|- log: sun.util.logging.PlatformLogger\l- eventLog: sun.util.logging.PlatformLogger\l- focusLog: sun.util.logging.PlatformLogger\l- mixingLog: sun.util.logging.PlatformLogger\l  peer: java.awt.peer.ComponentPeer\l  parent: java.awt.Container\l  appContext: sun.awt.AppContext\l  x: int\l  y: int\l  width: int\l  height: int\l  foreground: java.awt.Color\l  background: java.awt.Color\l  font: java.awt.Font\l  peerFont: java.awt.Font\l  cursor: java.awt.Cursor\l  locale: java.util.Locale\l- graphicsConfig: java.awt.GraphicsConfiguration\l  bufferStrategy: java.awt.image.BufferStrategy\l  ignoreRepaint: boolean\l  visible: boolean\l  enabled: boolean\l- valid: boolean\l  dropTarget: java.awt.dnd.DropTarget\l  popups: java.util.Vector[java/awt/PopupMenu]\l- name: java.lang.String\l- nameExplicitlySet: boolean\l- focusable: boolean\l- FOCUS_TRAVERSABLE_UNKNOWN: int\l- FOCUS_TRAVERSABLE_DEFAULT: int\l- FOCUS_TRAVERSABLE_SET: int\l- isFocusTraversableOverridden: int\l  focusTraversalKeys: java.util.Set[][java/util/Set, java/awt/AWTKeyStroke]\l- focusTraversalKeyPropertyNames: java.lang.String[]\l- focusTraversalKeysEnabled: boolean\l  LOCK: java.lang.Object\l- acc: java.security.AccessControlContext\l  minSize: java.awt.Dimension\l  minSizeSet: boolean\l  prefSize: java.awt.Dimension\l  prefSizeSet: boolean\l  maxSize: java.awt.Dimension\l  maxSizeSet: boolean\l  componentOrientation: java.awt.ComponentOrientation\l  newEventsOnly: boolean\l  componentListener: java.awt.event.ComponentListener\l  focusListener: java.awt.event.FocusListener\l  hierarchyListener: java.awt.event.HierarchyListener\l  hierarchyBoundsListener: java.awt.event.HierarchyBoundsListener\l  keyListener: java.awt.event.KeyListener\l  mouseListener: java.awt.event.MouseListener\l  mouseMotionListener: java.awt.event.MouseMotionListener\l  mouseWheelListener: java.awt.event.MouseWheelListener\l  inputMethodListener: java.awt.event.InputMethodListener\l  windowClosingException: java.lang.RuntimeException\l  actionListenerK: java.lang.String\l  adjustmentListenerK: java.lang.String\l  componentListenerK: java.lang.String\l  containerListenerK: java.lang.String\l  focusListenerK: java.lang.String\l  itemListenerK: java.lang.String\l  keyListenerK: java.lang.String\l  mouseListenerK: java.lang.String\l  mouseMotionListenerK: java.lang.String\l  mouseWheelListenerK: java.lang.String\l  textListenerK: java.lang.String\l  ownedWindowK: java.lang.String\l  windowListenerK: java.lang.String\l  inputMethodListenerK: java.lang.String\l  hierarchyListenerK: java.lang.String\l  hierarchyBoundsListenerK: java.lang.String\l  windowStateListenerK: java.lang.String\l  windowFocusListenerK: java.lang.String\l  eventMask: long\l  isInc: boolean\l  incRate: int\l+ TOP_ALIGNMENT: float\l+ CENTER_ALIGNMENT: float\l+ BOTTOM_ALIGNMENT: float\l+ LEFT_ALIGNMENT: float\l+ RIGHT_ALIGNMENT: float\l- serialVersionUID: long\l- changeSupport: java.beans.PropertyChangeSupport\l- objectLock: java.lang.Object\l  isPacked: boolean\l- boundsOp: int\l- compoundShape: sun.java2d.pipe.Region\l- mixingCutoutRegion: sun.java2d.pipe.Region\l- isAddNotifyComplete: boolean\l  backgroundEraseDisabled: boolean\l  eventCache: sun.awt.EventQueueItem[]\l- coalescingEnabled: boolean\l- coalesceMap: java.util.Map[java/lang/Class, java/lang/Boolean]\l- coalesceEventsParams: java.lang.Class[]\l- requestFocusController: sun.awt.RequestFocusController\l- autoFocusTransferOnDisposal: boolean\l- componentSerializedDataVersion: int\l# accessibleContext: javax.accessibility.AccessibleContext\l  $assertionsDisabled: boolean\l|  Object getObjectLock()\l  AccessControlContext getAccessControlContext()\l  int getBoundsOp()\l  void setBoundsOp(int)\l  void initializeFocusTraversalKeys()\l  String constructComponentName()\l+ String getName()\l+ void setName(java.lang.String)\l+ Container getParent()\l  Container getParent_NoClientCode()\l  Container getContainer()\l+ ComponentPeer getPeer()\l+ void setDropTarget(java.awt.dnd.DropTarget)\l+ DropTarget getDropTarget()\l+ GraphicsConfiguration getGraphicsConfiguration()\l  GraphicsConfiguration getGraphicsConfiguration_NoClientCode()\l  void setGraphicsConfiguration(java.awt.GraphicsConfiguration)\l  boolean updateGraphicsData(java.awt.GraphicsConfiguration)\l  void checkGD(java.lang.String)\l+ Object getTreeLock()\l  void checkTreeLock()\l+ Toolkit getToolkit()\l  Toolkit getToolkitImpl()\l+ boolean isValid()\l+ boolean isDisplayable()\l+ boolean isVisible()\l  boolean isVisible_NoClientCode()\l  boolean isRecursivelyVisible()\l- Rectangle getRecursivelyVisibleBounds()\l  Point pointRelativeToComponent(java.awt.Point)\l  Component findUnderMouseInWindow(java.awt.PointerInfo)\l+ Point getMousePosition()\l  boolean isSameOrAncestorOf(java.awt.Component, boolean)\l+ boolean isShowing()\l+ boolean isEnabled()\l  boolean isEnabledImpl()\l+ void setEnabled(boolean)\l+ void enable()\l+ void enable(boolean)\l+ void disable()\l+ boolean isDoubleBuffered()\l+ void enableInputMethods(boolean)\l+ void setVisible(boolean)\l+ void show()\l+ void show(boolean)\l  boolean containsFocus()\l  void clearMostRecentFocusOwnerOnHide()\l  void clearCurrentFocusCycleRootOnHide()\l+ void hide()\l+ Color getForeground()\l+ void setForeground(java.awt.Color)\l+ boolean isForegroundSet()\l+ Color getBackground()\l+ void setBackground(java.awt.Color)\l+ boolean isBackgroundSet()\l+ Font getFont()\l  Font getFont_NoClientCode()\l+ void setFont(java.awt.Font)\l+ boolean isFontSet()\l+ Locale getLocale()\l+ void setLocale(java.util.Locale)\l+ ColorModel getColorModel()\l+ Point getLocation()\l+ Point getLocationOnScreen()\l  Point getLocationOnScreen_NoTreeLock()\l+ Point location()\l- Point location_NoClientCode()\l+ void setLocation(int, int)\l+ void move(int, int)\l+ void setLocation(java.awt.Point)\l+ Dimension getSize()\l+ Dimension size()\l+ void setSize(int, int)\l+ void resize(int, int)\l+ void setSize(java.awt.Dimension)\l+ void resize(java.awt.Dimension)\l+ Rectangle getBounds()\l+ Rectangle bounds()\l+ void setBounds(int, int, int, int)\l+ void reshape(int, int, int, int)\l- void repaintParentIfNeeded(int, int, int, int)\l- void reshapeNativePeer(int, int, int, int, int)\l- void notifyNewBounds(boolean, boolean)\l+ void setBounds(java.awt.Rectangle)\l+ int getX()\l+ int getY()\l+ int getWidth()\l+ int getHeight()\l+ Rectangle getBounds(java.awt.Rectangle)\l+ Dimension getSize(java.awt.Dimension)\l+ Point getLocation(java.awt.Point)\l+ boolean isOpaque()\l+ boolean isLightweight()\l+ void setPreferredSize(java.awt.Dimension)\l+ boolean isPreferredSizeSet()\l+ Dimension getPreferredSize()\l+ Dimension preferredSize()\l+ void setMinimumSize(java.awt.Dimension)\l+ boolean isMinimumSizeSet()\l+ Dimension getMinimumSize()\l+ Dimension minimumSize()\l+ void setMaximumSize(java.awt.Dimension)\l+ boolean isMaximumSizeSet()\l+ Dimension getMaximumSize()\l+ float getAlignmentX()\l+ float getAlignmentY()\l+ int getBaseline(int, int)\l+ Component$BaselineResizeBehavior getBaselineResizeBehavior()\l+ void doLayout()\l+ void layout()\l+ void validate()\l+ void invalidate()\l  void invalidateParent()\l  void invalidateIfValid()\l+ void revalidate()\l  void revalidateSynchronously()\l+ Graphics getGraphics()\l  Graphics getGraphics_NoClientCode()\l+ FontMetrics getFontMetrics(java.awt.Font)\l+ void setCursor(java.awt.Cursor)\l  void updateCursorImmediately()\l+ Cursor getCursor()\l  Cursor getCursor_NoClientCode()\l+ boolean isCursorSet()\l+ void paint(java.awt.Graphics)\l+ void update(java.awt.Graphics)\l+ void paintAll(java.awt.Graphics)\l  void lightweightPaint(java.awt.Graphics)\l  void paintHeavyweightComponents(java.awt.Graphics)\l+ void repaint()\l+ void repaint(long)\l+ void repaint(int, int, int, int)\l+ void repaint(long, int, int, int, int)\l+ void print(java.awt.Graphics)\l+ void printAll(java.awt.Graphics)\l  void lightweightPrint(java.awt.Graphics)\l  void printHeavyweightComponents(java.awt.Graphics)\l- Insets getInsets_NoClientCode()\l+ boolean imageUpdate(java.awt.Image, int, int, int, int, int)\l+ Image createImage(java.awt.image.ImageProducer)\l+ Image createImage(int, int)\l+ VolatileImage createVolatileImage(int, int)\l+ VolatileImage createVolatileImage(int, int, java.awt.ImageCapabilities)\l+ boolean prepareImage(java.awt.Image, java.awt.image.ImageObserver)\l+ boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver)\l+ int checkImage(java.awt.Image, java.awt.image.ImageObserver)\l+ int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver)\l  void createBufferStrategy(int)\l  void createBufferStrategy(int, java.awt.BufferCapabilities)\l  BufferStrategy getBufferStrategy()\l  Image getBackBuffer()\l+ void setIgnoreRepaint(boolean)\l+ boolean getIgnoreRepaint()\l+ boolean contains(int, int)\l+ boolean inside(int, int)\l+ boolean contains(java.awt.Point)\l+ Component getComponentAt(int, int)\l+ Component locate(int, int)\l+ Component getComponentAt(java.awt.Point)\l+ void deliverEvent(java.awt.Event)\l+ void dispatchEvent(java.awt.AWTEvent)\l  void dispatchEventImpl(java.awt.AWTEvent)\l  void autoProcessMouseWheel(java.awt.event.MouseWheelEvent)\l  boolean dispatchMouseWheelToAncestor(java.awt.event.MouseWheelEvent)\l  boolean checkWindowClosingException()\l  boolean areInputMethodsEnabled()\l  boolean eventEnabled(java.awt.AWTEvent)\l  boolean eventTypeEnabled(int)\l+ boolean postEvent(java.awt.Event)\l+ void addComponentListener(java.awt.event.ComponentListener)\l+ void removeComponentListener(java.awt.event.ComponentListener)\l+ ComponentListener[] getComponentListeners()\l+ void addFocusListener(java.awt.event.FocusListener)\l+ void removeFocusListener(java.awt.event.FocusListener)\l+ FocusListener[] getFocusListeners()\l+ void addHierarchyListener(java.awt.event.HierarchyListener)\l+ void removeHierarchyListener(java.awt.event.HierarchyListener)\l+ HierarchyListener[] getHierarchyListeners()\l+ void addHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)\l+ void removeHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)\l  int numListening(long)\l  int countHierarchyMembers()\l  int createHierarchyEvents(int, java.awt.Component, java.awt.Container, long, boolean)\l+ HierarchyBoundsListener[] getHierarchyBoundsListeners()\l  void adjustListeningChildrenOnParent(long, int)\l+ void addKeyListener(java.awt.event.KeyListener)\l+ void removeKeyListener(java.awt.event.KeyListener)\l+ KeyListener[] getKeyListeners()\l+ void addMouseListener(java.awt.event.MouseListener)\l+ void removeMouseListener(java.awt.event.MouseListener)\l+ MouseListener[] getMouseListeners()\l+ void addMouseMotionListener(java.awt.event.MouseMotionListener)\l+ void removeMouseMotionListener(java.awt.event.MouseMotionListener)\l+ MouseMotionListener[] getMouseMotionListeners()\l+ void addMouseWheelListener(java.awt.event.MouseWheelListener)\l+ void removeMouseWheelListener(java.awt.event.MouseWheelListener)\l+ MouseWheelListener[] getMouseWheelListeners()\l+ void addInputMethodListener(java.awt.event.InputMethodListener)\l+ void removeInputMethodListener(java.awt.event.InputMethodListener)\l+ InputMethodListener[] getInputMethodListeners()\l+ EventListener[] getListeners(java.lang.Class)\l+ InputMethodRequests getInputMethodRequests()\l+ InputContext getInputContext()\l# void enableEvents(long)\l# void disableEvents(long)\l- boolean checkCoalescing()\l- boolean isCoalesceEventsOverriden(java.lang.Class)\l  boolean isCoalescingEnabled()\l# AWTEvent coalesceEvents(java.awt.AWTEvent, java.awt.AWTEvent)\l# void processEvent(java.awt.AWTEvent)\l# void processComponentEvent(java.awt.event.ComponentEvent)\l# void processFocusEvent(java.awt.event.FocusEvent)\l# void processKeyEvent(java.awt.event.KeyEvent)\l# void processMouseEvent(java.awt.event.MouseEvent)\l# void processMouseMotionEvent(java.awt.event.MouseEvent)\l# void processMouseWheelEvent(java.awt.event.MouseWheelEvent)\l  boolean postsOldMouseEvents()\l# void processInputMethodEvent(java.awt.event.InputMethodEvent)\l# void processHierarchyEvent(java.awt.event.HierarchyEvent)\l# void processHierarchyBoundsEvent(java.awt.event.HierarchyEvent)\l+ boolean handleEvent(java.awt.Event)\l+ boolean mouseDown(java.awt.Event, int, int)\l+ boolean mouseDrag(java.awt.Event, int, int)\l+ boolean mouseUp(java.awt.Event, int, int)\l+ boolean mouseMove(java.awt.Event, int, int)\l+ boolean mouseEnter(java.awt.Event, int, int)\l+ boolean mouseExit(java.awt.Event, int, int)\l+ boolean keyDown(java.awt.Event, int)\l+ boolean keyUp(java.awt.Event, int)\l+ boolean action(java.awt.Event, java.lang.Object)\l+ void addNotify()\l+ void removeNotify()\l+ boolean gotFocus(java.awt.Event, java.lang.Object)\l+ boolean lostFocus(java.awt.Event, java.lang.Object)\l+ boolean isFocusTraversable()\l+ boolean isFocusable()\l+ void setFocusable(boolean)\l  boolean isFocusTraversableOverridden()\l+ void setFocusTraversalKeys(int, java.util.Set)\l+ Set getFocusTraversalKeys(int)\l  void setFocusTraversalKeys_NoIDCheck(int, java.util.Set)\l  Set getFocusTraversalKeys_NoIDCheck(int)\l+ boolean areFocusTraversalKeysSet(int)\l+ void setFocusTraversalKeysEnabled(boolean)\l+ boolean getFocusTraversalKeysEnabled()\l+ void requestFocus()\l  boolean requestFocus(sun.awt.CausedFocusEvent$Cause)\l# boolean requestFocus(boolean)\l  boolean requestFocus(boolean, sun.awt.CausedFocusEvent$Cause)\l+ boolean requestFocusInWindow()\l  boolean requestFocusInWindow(sun.awt.CausedFocusEvent$Cause)\l# boolean requestFocusInWindow(boolean)\l  boolean requestFocusInWindow(boolean, sun.awt.CausedFocusEvent$Cause)\l  boolean requestFocusHelper(boolean, boolean)\l  boolean requestFocusHelper(boolean, boolean, sun.awt.CausedFocusEvent$Cause)\l- boolean isRequestFocusAccepted(boolean, boolean, sun.awt.CausedFocusEvent$Cause)\l  void setRequestFocusController(sun.awt.RequestFocusController)\l+ Container getFocusCycleRootAncestor()\l+ boolean isFocusCycleRoot(java.awt.Container)\l  Container getTraversalRoot()\l+ void transferFocus()\l+ void nextFocus()\l  boolean transferFocus(boolean)\l  Component getNextFocusCandidate()\l+ void transferFocusBackward()\l  boolean transferFocusBackward(boolean)\l+ void transferFocusUpCycle()\l+ boolean hasFocus()\l+ boolean isFocusOwner()\l  void setAutoFocusTransferOnDisposal(boolean)\l  boolean isAutoFocusTransferOnDisposal()\l+ void add(java.awt.PopupMenu)\l+ void remove(java.awt.MenuComponent)\l# String paramString()\l+ String toString()\l+ void list()\l+ void list(java.io.PrintStream)\l+ void list(java.io.PrintStream, int)\l+ void list(java.io.PrintWriter)\l+ void list(java.io.PrintWriter, int)\l  Container getNativeContainer()\l+ void addPropertyChangeListener(java.beans.PropertyChangeListener)\l+ void removePropertyChangeListener(java.beans.PropertyChangeListener)\l+ PropertyChangeListener[] getPropertyChangeListeners()\l+ void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\l+ void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\l+ PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)\l# void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object)\l# void firePropertyChange(java.lang.String, boolean, boolean)\l# void firePropertyChange(java.lang.String, int, int)\l+ void firePropertyChange(java.lang.String, byte, byte)\l+ void firePropertyChange(java.lang.String, char, char)\l+ void firePropertyChange(java.lang.String, short, short)\l+ void firePropertyChange(java.lang.String, long, long)\l+ void firePropertyChange(java.lang.String, float, float)\l+ void firePropertyChange(java.lang.String, double, double)\l- void doSwingSerialization()\l- void writeObject(java.io.ObjectOutputStream)\l- void readObject(java.io.ObjectInputStream)\l+ void setComponentOrientation(java.awt.ComponentOrientation)\l+ ComponentOrientation getComponentOrientation()\l+ void applyComponentOrientation(java.awt.ComponentOrientation)\l  boolean canBeFocusOwner()\l  boolean canBeFocusOwnerRecursively()\l  void relocateComponent()\l  Window getContainingWindow()\l- void initIDs()\l+ AccessibleContext getAccessibleContext()\l  int getAccessibleIndexInParent()\l  AccessibleStateSet getAccessibleStateSet()\l  boolean isInstanceOf(java.lang.Object, java.lang.String)\l  boolean areBoundsValid()\l  void applyCompoundShape(sun.java2d.pipe.Region)\l- Region getAppliedShape()\l  Point getLocationOnWindow()\l  Region getNormalShape()\l  Region getOpaqueShape()\l  int getSiblingIndexAbove()\l  ComponentPeer getHWPeerAboveMe()\l  int getSiblingIndexBelow()\l  boolean isNonOpaqueForMixing()\l- Region calculateCurrentShape()\l  void applyCurrentShape()\l  void subtractAndApplyShape(sun.java2d.pipe.Region)\l- void applyCurrentShapeBelowMe()\l  void subtractAndApplyShapeBelowMe()\l  void mixOnShowing()\l  void mixOnHiding(boolean)\l  void mixOnReshaping()\l  void mixOnZOrderChanging(int, int)\l  void mixOnValidating()\l  boolean isMixingNeeded()\l  void updateZOrder()\l  Region access$002(java.awt.Component, sun.java2d.pipe.Region)\l  Point access$100(java.awt.Component)\l  Insets access$400(java.awt.Component)\l  boolean access$500(java.lang.Class)\l|}"
		style=filled
		fillcolor=yellow

	]

	Button [
		label = "{\<\<Leaf\>\>\njava/awt/Button|  label: java.lang.String\l  actionCommand: java.lang.String\l  actionListener: java.awt.event.ActionListener\l- base: java.lang.String\l- nameCounter: int\l- serialVersionUID: long\l- buttonSerializedDataVersion: int\l|- void initIDs()\l  String constructComponentName()\l+ void addNotify()\l+ String getLabel()\l+ void setLabel(java.lang.String)\l+ void setActionCommand(java.lang.String)\l+ String getActionCommand()\l+ void addActionListener(java.awt.event.ActionListener)\l+ void removeActionListener(java.awt.event.ActionListener)\l+ ActionListener[] getActionListeners()\l+ EventListener[] getListeners(java.lang.Class)\l  boolean eventEnabled(java.awt.AWTEvent)\l# void processEvent(java.awt.AWTEvent)\l# void processActionEvent(java.awt.event.ActionEvent)\l# String paramString()\l- void writeObject(java.io.ObjectOutputStream)\l- void readObject(java.io.ObjectInputStream)\l+ AccessibleContext getAccessibleContext()\l|}"
		style=filled
		fillcolor=yellow

	]

	edge [
		arrowhead = "empty"
	]

	Container -> Component

	Button -> Component

	edge [
		style = "dashed"
	]

	edge [
		arrowhead = "normal" style = "solid"
	]

	Container -> Component

	Component -> Container

	edge [
		arrowhead = "normal" style = "dashed"
	]

}" style = "dashed"
	]

}